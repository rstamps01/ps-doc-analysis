# Enhanced Information Validation Tool - Docker Compose Configuration

services:
  # Backend API Service
  backend:
    env_file:
      - .env
    build:
      context: ./validation_tool
      dockerfile: Dockerfile
    container_name: validation-tool-backend
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=src/main.py
      - PORT=5001
      - PYTHONPATH=/app/src
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./exports:/app/exports
      - ./uploads:/app/uploads
    networks:
      - validation-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Web Service
  frontend:
    env_file:
      - ./validation-dashboard/.env
    build:
      context: ./validation-dashboard
      dockerfile: Dockerfile
    container_name: validation-tool-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - validation-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Database Service (SQLite - file-based)
  # Note: SQLite runs within the backend container
  # This service is for potential future PostgreSQL upgrade
  # database:
  #   image: postgres:15-alpine
  #   container_name: validation-tool-db
  #   environment:
  #     - POSTGRES_DB=validation_tool
  #     - POSTGRES_USER=validation_user
  #     - POSTGRES_PASSWORD=secure_password_123
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - validation-network
  #   restart: unless-stopped

  # Redis Cache Service (Optional - for future scaling)
  # redis:
  #   image: redis:7-alpine
  #   container_name: validation-tool-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - validation-network
  #   restart: unless-stopped
  #   command: redis-server --appendonly yes

networks:
  validation-network:
    driver: bridge
    name: validation-tool-network

volumes:
  # For future database upgrade
  # postgres_data:
  #   driver: local
  # redis_data:
  #   driver: local
  
  # Local data persistence
  validation_data:
    driver: local
  validation_logs:
    driver: local
  validation_exports:
    driver: local

